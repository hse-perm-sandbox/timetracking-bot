name: Create and publish a Docker image

on:
  push:
    branches: ['develop']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTAINER_NAME: ${{ github.event.repository.name }}-dev
  VOLUME_NAME: ${{ github.event.repository.name }}-data-dev

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SANDBOX_HOST }}
          username: ${{ secrets.SANDBOX_USER }}
          key: ${{ secrets.SANDBOX_KEY }}
          port: ${{ secrets.SANDBOX_PORT }}
          script: |
            docker logout;
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev;
            docker rm -f ${{ env.CONTAINER_NAME }} || true;
            docker run -d \
              -v ${{ env.VOLUME_NAME }}:/app/data/ \
              -e TIMETRACKING_TG_TOKEN="${{ secrets.TIMETRACKING_TG_TOKEN }}" \
              --restart=always \
              --name ${{ env.CONTAINER_NAME }} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev;
  notify-tg:
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
    - name: Notify on Telegram
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.NOTIFY_TG_TOKEN }}
        CHAT_ID: ${{ secrets.NOTIFY_CHAT_ID }}
      run: |
        MESSAGE="${{github.event.repo.name}} - successfull deploy by ${{ github.event.actor.login }}"
        curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
        -d chat_id=${CHAT_ID} -d text="$MESSAGE" -d parse_mode="Markdown"